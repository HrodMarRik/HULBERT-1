name: Development Tests

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  # Tests Backend
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run backend tests
        run: |
          cd backend
          pytest --cov=app --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend-dev
          name: backend-coverage-dev

      - name: Lint backend code
        run: |
          cd backend
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check .

  # Tests Frontend
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: domains/informatique/02-projects/portfolio/Portfolio/angular-portfolio/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd domains/informatique/02-projects/portfolio/Portfolio/angular-portfolio
          npm ci

      - name: Run frontend tests
        run: |
          cd domains/informatique/02-projects/portfolio/Portfolio/angular-portfolio
          npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

      - name: Lint frontend code
        run: |
          cd domains/informatique/02-projects/portfolio/Portfolio/angular-portfolio
          npm run lint

      - name: Build frontend (test)
        run: |
          cd domains/informatique/02-projects/portfolio/Portfolio/angular-portfolio
          npm run build -- --configuration=production

  # Build Docker Images (test seulement)
  build-images-test:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image (test)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: hulbert-backend:dev-test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build frontend image (test)
        uses: docker/build-push-action@v5
        with:
          context: ./domains/informatique/02-projects/portfolio/Portfolio/angular-portfolio
          push: false
          tags: hulbert-frontend:dev-test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Notification de succÃ¨s des tests
  notify-success:
    runs-on: ubuntu-latest
    needs: [build-images-test]
    if: success()
    steps:
      - name: Notify tests success
        run: |
          echo "âœ… Tests de dÃ©veloppement rÃ©ussis sur la branche dev"
          echo "ðŸš€ PrÃªt pour merge vers main et dÃ©ploiement en production"
